if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install(c("sva", "edgeR", "limma", "Biobase", "biomaRt",
"clusterProfiler", "EnhancedVolcano", "org.Hs.eg.db",
"org.Mm.eg.db", "org.Rn.eg.db"))
library(data.table)
library(edgeR)
library(limma)
library(edgeR)
library(ggplot2)
library(ggrepel)
library(ggfortify)
library(stats)
library(sva)
setwd("C:\Users\mvsan\code\YAP_TAZ_bulkRNAseq\RNAseq\Rep analysis")
setwd("C:\users\mvsan\code\YAP_TAZ_bulkRNAseq\RNAseq\Rep analysis")
setwd("C:/users/mvsan/code/YAP_TAZ_bulkRNAseq/RNAseq/Rep analysis")
# Read all count files into a DGElist
dgls <- readDGE(file_names, columns = c(1, 7), skip = 1)
#Combine count files into single expression matrix
# Retrieve count file paths
file_names <- list.files(count_file_path, pattern = "featureCounts_exon\\.txt$", recursive = T, full.names = T)
#Combine count files into single expression matrix
# Retrieve count file paths
file_names <- list.files(path= ".", pattern = "featureCounts_exon\\.txt$", recursive = T, full.names = T)
# Read all count files into a DGElist
dgls <- readDGE(file_names, columns = c(1, 7), skip = 1)
counts_raw <- as.data.frame(dgls$counts)
# Rename samples
sample_name <- gsub("_featureCounts_exon", "", basename(colnames(counts_raw)))
colnames(counts_raw) <- sample_name
# Save the combined count table
fwrite(counts_raw, "counts_raw.tsv", sep = "\t")
#Reading raw count data
count_tbl <- fread("counts_raw.tsv", data.table = F)
#Adding Row Names to the Count Table
rownames(count_tbl) <- count_tbl[[1]]
#Combine count files into single expression matrix
# Retrieve count file paths
file_names <- list.files(path= ".", pattern = "featureCounts_exon\\.txt$", recursive = T, full.names = T)
# Read all count files into a DGElist
dgls <- readDGE(file_names, columns = c(1, 7), skip = 1)
counts_raw <- as.data.frame(dgls$counts)
# Rename samples
sample_name <- gsub("_featureCounts_exon", "", basename(colnames(counts_raw)))
colnames(counts_raw) <- sample_name
# Save the combined count table
fwrite(counts_raw, "counts_raw.tsv", sep = "\t")
#Reading raw count data
count_tbl <- fread("counts_raw.tsv", data.table = F)
View(counts_raw)
#Combine count files into single expression matrix
# Retrieve count file paths
file_names <- list.files(path= ".", pattern = "featureCounts_exon\\.txt$", recursive = T, full.names = T)
# Read all count files into a DGElist
dgls <- readDGE(file_names, columns = c(1, 7), skip = 1)
counts_raw <- as.data.frame(dgls$counts)
View(counts_raw)
View(counts_raw)
#Combine count files into single expression matrix
# Retrieve count file paths
file_names <- list.files(path= ".", pattern = "featureCounts_exon\\.txt$", recursive = F, full.names = T)
# Read all count files into a DGElist
dgls <- readDGE(file_names, columns = c(1, 7), skip = 1)
counts_raw <- as.data.frame(dgls$counts)
# Rename samples
sample_name <- gsub("_featureCounts_exon", "", basename(colnames(counts_raw)))
colnames(counts_raw) <- sample_name
# Save the combined count table
fwrite(counts_raw, "counts_raw.tsv", sep = "\t")
#Reading raw count data
count_tbl <- fread("counts_raw.tsv", data.table = F)
View(count_tbl)
View(count_tbl)
#Adding Row Names to the Count Table
rownames(count_tbl) <- count_tbl[[1]]
View(count_tbl)
View(count_tbl)
#Combine count files into single expression matrix
# Retrieve count file paths
file_names <- list.files(path= ".", pattern = "featureCounts_exon\\.txt$", recursive = F, full.names = T)
# Read all count files into a DGElist
dgls <- readDGE(file_names, columns = c(1, 7), skip = 1)
counts_raw <- as.data.frame(dgls$counts)
View(counts_raw)
# Rename samples
sample_name <- gsub("_featureCounts_exon", "", basename(colnames(counts_raw)))
colnames(counts_raw) <- sample_name
View(counts_raw)
# Save the combined count table
fwrite(counts_raw, "counts_raw.tsv", sep = "\t")
#Reading raw count data
count_tbl <- fread("counts_raw.tsv", data.table = F)
View(count_tbl)
#Combine count files into single expression matrix
# Retrieve count file paths
file_names <- list.files(path= ".", pattern = "featureCounts_exon\\.txt$", recursive = F, full.names = T)
# Read all count files into a DGElist
dgls <- readDGE(file_names, columns = c(1, 7), skip = 1)
counts_raw <- as.data.frame(dgls$counts)
# Rename samples
sample_name <- gsub("_featureCounts_exon", "", basename(colnames(counts_raw)))
colnames(counts_raw) <- sample_name
# Save the combined count table
fwrite(counts_raw, "counts_raw.tsv", sep = "\t")
# Save the combined count table
fwrite(counts_raw, "counts_raw.tsv", sep = "\t", row.names = T)
#Reading raw count data
count_tbl <- fread("counts_raw.tsv", data.table = F)
#Adding Row Names to the Count Table
rownames(count_tbl) <- count_tbl[[1]]
View(count_tbl)
count_tbl <- count_tbl[, -1]
View(count_tbl)
View(count_tbl)
##FILTERING
#Remove genes with little to no expression
perc_keep <- 0.8
gene_keep <- rowSums(count_tbl > 0) >= ceiling(perc_keep * ncol(count_tbl))
count_tbl_low_rm <- count_tbl[gene_keep, ]
